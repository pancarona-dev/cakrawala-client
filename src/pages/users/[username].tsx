import React, { useEffect, useState } from "react";
import Head from "next/head";
import { publicFetch } from "@utils/service";
import Layout from "@components/layout";
import UserCard from "@components/user-card";
import AvatarCard from "@components/user-card/avatar-card";
import PostList from "@components/user-card/post-list";
import PostItem from "@components/user-card/post-list/post-item";
import { Spinner } from "@components/icons";

const UserDetail = ({ username }: any) => {
  const [posts, setPosts] = useState([]);
  const [postType, setPostType] = useState("Questions");

  useEffect(() => {
    const fetchQuestions = async () => {
      const { data } = await publicFetch.get(`/question/user/${username}`);
      setPosts(data);
    };
    fetchQuestions();
  }, [postType, username]);

  return (
    <>
      <Head>
        <title>{`${username} - Cakrawala Achieve`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          type="image/png"
          href="/icon/favicon-196x196.png"
          sizes="196x196"
        />
        <link
          rel="icon"
          type="image/png"
          href="/icon/favicon-96x96.png"
          sizes="96x96"
        />
        <link
          rel="icon"
          type="image/png"
          href="/icon/favicon-32x32.png"
          sizes="32x32"
        />
        <link
          rel="icon"
          type="image/png"
          href="/icon/favicon-16x16.png"
          sizes="16x16"
        />
        <link
          rel="icon"
          type="image/png"
          href="/icon/favicon-128.png"
          sizes="128x128"
        />
      </Head>
      <Layout extra={false}>
        <UserCard>
          <AvatarCard username={username} />
          <PostList postType={postType} setPostType={setPostType}>
            {!posts && (
              <div className="loading">
                <Spinner />
              </div>
            )}

            {posts &&
              posts?.map(({ id, title, score, created }: any) => (
                <PostItem
                  key={id}
                  title={title}
                  vote={score}
                  created={created}
                  id={id}
                />
              ))}

            {posts?.length == 0 && (
              <div className="not-found-questions">
                Don&apos;t have any questions yet.
              </div>
            )}
          </PostList>
        </UserCard>
      </Layout>
    </>
  );
};

export async function getServerSideProps(context: any) {
  const username = context.params.username;
  return {
    props: {
      username,
    },
  };
}

export default UserDetail;
